This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: public/
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.claude/
  settings.local.json
markdown/
  blog/
    blog_1.mdx
    blog_2.mdx
    blog_3.mdx
    blog_4.mdx
    blog_5.mdx
    blog_6.mdx
    blog_7.mdx
    blog_8.mdx
src/
  app/
    api/
      contex/
        ToasetContex.tsx
      data.tsx
    globals.css
    layout.tsx
    not-found.tsx
    page.tsx
  components/
    Breadcrumb/
      index.tsx
    Common/
      Breadcrumb.tsx
      Loader.tsx
      PreLoader.tsx
      ScrollUp.tsx
    Home/
      AboutUs/
        index.tsx
      Articles/
        index.tsx
      Beliefs/
        index.tsx
      Dedicated/
        index.tsx
      Digital/
        index.tsx
      FAQ/
        index.tsx
      Featured/
        index.tsx
      Hero/
        index.tsx
      Insta/
        index.tsx
      Joinus/
        index.tsx
      Manage/
        index.tsx
      Process/
        index.tsx
      Team/
        index.tsx
      Testimonials/
        index.tsx
      Work/
        index.tsx
    Layout/
      Footer/
        index.tsx
      Header/
        Logo/
          index.tsx
        Navigation/
          HeaderLink.tsx
          menuData.tsx
          MobileHeaderLink.tsx
        index.tsx
        ThemeToggler.tsx
    NotFound/
      index.tsx
    ScrollToTop/
      index.tsx
    SharedComponent/
      Blog/
        blogCard.tsx
        index.tsx
      HeroSub/
        index.tsx
      Volunteer/
        index.tsx
  types/
    blog.ts
    breadcrumb.ts
    menu.ts
  utils/
    aos.tsx
    markdown.ts
    markdownToHtml.ts
    sagehelp.ts
    validateEmail.ts
.gitignore
.npmrc
next.config.mjs
package.json
postcss.config.mjs
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".claude/settings.local.json">
{
  "permissions": {
    "allow": [
      "mcp__ide__getDiagnostics",
      "Bash(mv:*)",
      "Bash(bun run:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)"
    ],
    "deny": []
  }
}
</file>

<file path="markdown/blog/blog_1.mdx">
---
title: The Universe is all of time and space and its contents.
excerpt: The Universe is all of time and space and its contents.
date: 2024-5-23
coverImage: /images/blog/blog_1.jpg
author: silicaman
authorImage: /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_2.mdx">
---
title: The work is top-notch and I consistently outrank all my...
excerpt: The work is top-notch and I consistently outrank all my...
date: 2024-11-08
coverImage: /images/blog/blog_2.jpg
author: silicaman
authorImage:  /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_3.mdx">
---
title: Grow my business through organic search and marketing...
excerpt: Grow my business through organic search and marketing...
date: 2024-11-08
coverImage: /images/blog/blog_3.jpg
author: silicaman
authorImage:  /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_4.mdx">
---
title: Tailored to your audience to enhance brand awareness...
excerpt: Tailored to your audience to enhance brand awareness...
date: 2024-11-08
coverImage: /images/blog/blog_4.png
author: silicaman
authorImage:  /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_5.mdx">
---
title: Uncover valuable insights for strategic business decisions...
excerpt: Uncover valuable insights for strategic business decisions...
date: 2024-11-08
coverImage: /images/blog/blog_5.jpg
author: silicaman
authorImage:  /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_6.mdx">
---
title: Drive growth and achieve your business objectives effectively...
excerpt: Drive growth and achieve your business objectives effectively...
date: 2024-11-08
coverImage: /images/blog/blog_6.jpg
author: silicaman
authorImage: /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_7.mdx">
---
title: Free access to our global partner network and marketplace...
excerpt: Free access to our global partner network and marketplace...
date: 2024-11-08
coverImage: /images/blog/blog_7.jpg
author: silicaman
authorImage: /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="markdown/blog/blog_8.mdx">
---
title: Define each stage of work to see whats important for you...
excerpt: Define each stage of work to see whats important for you...
date: 2024-11-08
coverImage: /images/blog/blog_8.jpg
author: silicaman
authorImage: /images/blogdetail-page/silicaman.png
---

# Main Heading & Points

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

- Vivamus eu lacus scelerisque, placerat commodo lectus.
- Etiam et ante at ex porta fringilla.
- Nullam dignissim sem eu magna aliquet, sit amet volutpat tellus

![Blog Details](/images/blogdetail-1.jpg)

Unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the

---

We are a dedicated team of passionate product managers, developers, UX/UI designers, QA engineers experts helping businesses from new startups

---

There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable making this the first true generator on the Internet. It uses a dictionary

---

## Tags

- Trends
- Design
- Research

---

## Share

- [Facebook](#)
- [Twitter](#)
- [Linkedin](#)

---

## Join our newsletter

Email address: [Subscribe](#)
</file>

<file path="src/app/api/contex/ToasetContex.tsx">
"use client";

import { Toaster } from "react-hot-toast";

const ToasterContext = () => {
  return (
    <div className="z-99999">
      <Toaster />
    </div>
  );
};

export default ToasterContext;
</file>

<file path="src/app/not-found.tsx">
import HeroSub from "@/components/SharedComponent/HeroSub";
import NotFound from "@/components/NotFound";
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "404 Page | Venus ",
};

const ErrorPage = () => {
  return (
    <>
      <HeroSub
        title="404"
      />
      <NotFound />
    </>
  );
};

export default ErrorPage;
</file>

<file path="src/components/Breadcrumb/index.tsx">
import React, { FC } from 'react';
import Link from 'next/link';

interface BreadcrumbProps {
    links: { href: string; text: string }[];    
}

const Breadcrumb: FC<BreadcrumbProps> = ({ links }) => {
    const lastIndex = links.length - 1;
    return (
        <div className="flex items-baseline flex-wrap justify-center my-[0.9375rem] mx-0">
            {links.map((link, index) => (
                <React.Fragment key={index}>
                    {index !== lastIndex ? (
                        <Link href={link.href} className="no-underline flex items-center text-midnight_text dark:text-white/70 font-normal md:text-21 text-18 hover:underline after:relative after:content-[''] after:ml-2.5 after:mr-[0.8125rem] after:my-0 after:inline-block after:top-[0.0625rem] after:w-2 after:h-2 after:border-r-2 after:border-solid after:border-b-2 after:border-midnight_text dark:after:border-white after:-rotate-45">
                            {link.text}
                        </Link>
                    ) : (
                        <span className="dark:text-white text-midnight_text md:text-21 text-18 mx-2.5">{link.text}</span>
                    )}
                </React.Fragment>
            ))}
        </div>
    );
};

export default Breadcrumb;
</file>

<file path="src/components/Common/Breadcrumb.tsx">
import Link from "next/link";
import { BreadcrumbProps } from "../../types/breadcrumb"; // Adjust the import path based on your project structure

const Breadcrumb: React.FC<BreadcrumbProps> = ({
  pageName,
  pageDescription,
}) => {
  return (
    <div className="dark:bg-darkmode relative z-10 overflow-hidden pb-[60px] pt-[120px] md:pt-[130px] lg:pt-[160px]">
      <div className="from-stroke/0 via-stroke to-stroke/0 dark:via-dark-3 absolute bottom-0 left-0 h-px w-full bg-linear-to-r"></div>
      <div className="container mx-auto">
        <div className="-mx-4 flex flex-wrap items-center">
          <div className="w-full px-4">
            <div className="text-center">
              <h1 className="text-black mb-4 text-3xl font-bold sm:text-4xl md:text-[40px] md:leading-[1.2] dark:text-white">
                {pageName}
              </h1>
              <p className="text-black dark:text-black-6 mb-5 text-base">
                {pageDescription}
              </p>

              <ul className="flex items-center justify-center gap-[10px]">
                <li>
                  <Link
                    href="/"
                    className="text-black flex items-center gap-[10px] text-base font-medium dark:text-white/50"
                  >
                    Home
                  </Link>
                </li>
                <li>
                  <p className="text-body-color flex items-center gap-[10px] text-base font-medium">
                    <span className="text-body-color dark:text-white/50"> / </span>
                    {pageName}
                  </p>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Breadcrumb;
</file>

<file path="src/components/Common/Loader.tsx">
import React from "react";

const Loader = () => {
  return (
    <span
      className={`ml-1.5 h-4 w-4 animate-spin rounded-full border-2 border-solid border-white border-t-transparent dark:border-t-transparent`}
    ></span>
  );
};

export default Loader;
</file>

<file path="src/components/Common/PreLoader.tsx">
import React from "react";

const PreLoader = () => {
  return (
    <div className="fixed left-0 top-0 z-999999 flex h-screen w-screen items-center justify-center bg-white">
      <div className="h-16 w-16 animate-spin rounded-full border-4 border-solid border-primary border-t-transparent"></div>
    </div>
  );
};

export default PreLoader;
</file>

<file path="src/components/Common/ScrollUp.tsx">
"use client";

import { useEffect } from "react";

export default function ScrollUp() {
  useEffect(() => window.document.scrollingElement?.scrollTo(0, 0), []);

  return null;
}
</file>

<file path="src/components/Home/AboutUs/index.tsx">
"use client";
import Image from "next/image";
import Link from "next/link";
import { Icon } from "@iconify/react";
import { Aboutdata } from "@/app/api/data";

const Aboutus = () => {
  return (
    <section className=" bg-cover bg-center dark:bg-darkmode overflow-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) relative z-1 md:max-w-(--breakpoint-md)">
        <div className="lg:p-12 px-2 bg-grey dark:bg-darkmode rounded-3xl">
          <Image
            src="/images/aboutus/dots.svg"
            width={100}
            height={100}
            alt="dots-image"
            className="absolute bottom-1 -left-20"
          />
          <p className="text-center text-primary text-18 tracking-widest uppercase mt-10">
            about us
          </p>
          <h4 className="text-center text-4xl lg:text-65 font-bold pb-12">
            Know more about us.
          </h4>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-16 lg:gap-x-32 mt-16">
            {Aboutdata.map((item, i) => (
              <div
                key={i}
                className="hover:bg-darkmode bg-white rounded-3xl p-8 shadow-xl group mb-28"
              >
                <h4 className="text-4xl font-semibold  text-black group-hover:text-white mb-5">
                  {item.heading}
                </h4>
                <Image
                  src={item.imgSrc}
                  alt={item.imgSrc}
                  width={100}
                  height={100}
                  className="mb-5"
                />
                <h4 className="text-lg font-normal text-black group-hover:text-white mb-5">
                  {item.paragraph}
                </h4>
                <Link
                  href="#"
                  className="text-18 font-semibold text-primary hover-underline flex items-center"
                >
                  {item.link}
                  <Icon icon="tabler:chevron-right" width="20" height="20" />
                </Link>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default Aboutus;
</file>

<file path="src/components/Home/Articles/index.tsx">
"use client";
import React, { useContext } from "react";
import Image from "next/image";
import Slider from "react-slick";
import Link from "next/link";
import { Article } from "@/app/api/data";

const settings = {
  dots: false,
  infinite: true,
  slidesToShow: 3,
  slidesToScroll: 2,
  arrows: false,
  autoplay: false,
  speed: 500,
  cssEase: "linear",
  responsive: [
    {
      breakpoint: 1200,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
  ],
};

const Articles = () => {
  return (
    <section className="relative dark:bg-midnight_text bg-grey overflow-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) relative">
        <div className="text-center">
          <h3 className="text-blue text-22 font-normal tracking-widest">
            ARTICLES
          </h3>
          <h3 className="text-65 sm:text-6xl font-bold">Our latest post.</h3>
        </div>

        <Slider {...settings}>
          {Article.map((items, i) => (
            <div key={i}>
              <div className="bg-white dark:bg-darkmode m-3 px-3 pt-3 pb-12 my-10 shadow-lg rounded-3xl relative">
                <Image
                  src={items.imgSrc}
                  alt="gaby"
                  width={389}
                  height={262}
                  className="inline-block m-auto"
                />
                <Link href="/" className="absolute bg-primary text-white hover:bg-black hover:shadow-xl py-3 px-6 rounded-full top-56 right-11  ">
                  {items.time} read
                </Link>
                <h4 className="text-2xl font-bold pt-6 text-black dark:text-white">
                  {items.heading}
                </h4>
                <h4 className="text-2xl font-bold pt-1 text-black dark:text-white">
                  {items.heading2}
                </h4>
                <div>
                  <h3 className="text-16 font-normal pt-6 pb-2 text-black/75 dark:text-white/75">
                    {items.name}
                  </h3>
                  <h3 className="text-16 font-normal pb-1 text-black/75 dark:text-white/75">
                    {items.date}
                  </h3>
                </div>
              </div>
            </div>
          ))}
        </Slider>
      </div>
    </section>
  );
};
export default Articles;
</file>

<file path="src/components/Home/Dedicated/index.tsx">
"use client";
import React from "react";
import Image from "next/image";

const Dedicated = () => {
  return (
    <section className="relative bg-cover bg-center dark:bg-darkmode overflow-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md)">
        <div className="grid grid-cols-1 lg:grid-cols-12">
          <Image
            src="/images/dedicated/spiral.svg"
            height={272}
            width={686}
            alt="spiral-design"
            className="absolute left-0 top-0 hidden lg:block -z-10"
          />
          {/* Left Column */}
          <div className="col-span-12 lg:col-span-6">
            <Image
              src="/images/dedicated/man.svg"
              alt="man-icon"
              width={416}
              height={530}
              className="mx-auto md:mx-0"
            />
          </div>

          {/* Right Column */}
          <div className="col-span-12 lg:col-span-6">
            <div className="relative">
              <Image
                src="/images/dedicated/comma.svg"
                alt="comma-image"
                width={200}
                height={106}
                className="absolute -top-16 -left-32 hidden lg:block"
              />
            </div>
            <p className="text-6xl font-bold sm:leading-tight text-center -mr-1 lg:text-start">
              “Dedicated to help people’s design needs.”
            </p>
            <p className="font-medium text-black/55 text-2xl mt-5 text-center lg:text-start -ml-1">
              Quis ipsum suspendisse ultrices gravida risus commodo viverra
              maecenas accumsan lacus vel facilisis
            </p>
            <p className="text-2xl font-semibold mt-12 lg:pl-32 relative lg:before:block before:hidden before:absolute before:bg-black before:h-0.5 before:w-24 before:left-0 before:bottom-1/2 text-center lg:text-start">
              Cathy Hills, CEO
            </p>
          </div>
        </div>
      </div>
    </section>
  );
};
export default Dedicated;
</file>

<file path="src/components/Home/Insta/index.tsx">
import Image from "next/image";
import Link from "next/link";

const Insta = () => {
  return (
    <section className="mx-auto max-w-2xl pb-16 px-4 sm:px-6 lg:max-w-7xl lg:px-8 -mb-24">
      <div className="grid grid-cols-1 gap-y-10 gap-x-16 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8">
        {/* Image Container 1 */}
        <div className="relative group mx-auto">
          <Image
            src="/images/insta/insta1.png"
            width={306}
            height={306}
            alt="instaOne"
            className="w-full"
          />
          <div className="absolute inset-0 bg-black/60 rounded-2xl duration-500"></div>
          <Link href={"https://instagram.com"} target="_blank">
            <button
              className="hidden absolute z-10 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white font-semibold group-hover:block"
            >
              <Image
                src="/images/insta/instagram.svg"
                alt="instagram"
                width={36}
                height={36}
              />
            </button>
          </Link>
        </div>

        {/* Image Container 2 */}
        <div className="relative group mx-auto">
          <Image
            src="/images/insta/insta2.png"
            width={306}
            height={306}
            alt="instaTwo"
            className="w-full"
          />
          <div className="absolute inset-0 bg-black/60 rounded-2xl duration-500"></div>
          <Link href={"https://instagram.com"} target="_blank">
            <button
              className="hidden absolute z-10 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white font-semibold group-hover:block"
            >
              <Image
                src="/images/insta/instagram.svg"
                alt="instagram"
                width={36}
                height={36}
              />
            </button>
          </Link>
        </div>

        {/* Image Container 3 */}
        <div className="relative group mx-auto">
          <Image
            src="/images/insta/insta3.png"
            width={306}
            height={306}
            alt="instaThree"
            className="w-full"
          />
          <div className="absolute inset-0 bg-black/60 rounded-2xl duration-500"></div>
          <Link href={"https://instagram.com"} target="_blank">
            <button
              className="hidden absolute z-10 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white font-semibold group-hover:block"
            >
              <Image
                src="/images/insta/instagram.svg"
                alt="instagram"
                width={36}
                height={36}
              />
            </button>
          </Link>
        </div>

        {/* Image Container 4 */}
        <div className="relative group mx-auto">
          <Image
            src="/images/insta/insta4.png"
            width={306}
            height={306}
            alt="instaFour"
            className="w-full"
          />
          <div className="absolute inset-0 bg-black/60 rounded-2xl duration-500"></div>
          <Link href={"https://instagram.com"} target="_blank">
            <button
              className="hidden absolute z-10 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white font-semibold group-hover:block"
            >
              <Image
                src="/images/insta/instagram.svg"
                alt="instagram"
                width={36}
                height={36}
              />
            </button>
          </Link>
        </div>
      </div>
    </section>
  );
};

export default Insta;
</file>

<file path="src/components/Home/Manage/index.tsx">
"use client";
import { useState } from "react";
import { Switch } from "@headlessui/react";
import Image from "next/image";

// Define the plan structure and its types
const plans = [
  {
    heading: "Startup",
    price: {
      monthly: 19,
      yearly: 190,
    },
    user: "per user",
    features: {
      profiles: "5 Social Profiles",
      posts: "5 Scheduled Posts Per Profile",
      templates: "400+ Templated",
      view: "Calendar View",
      support: "24/7 Support",
    },
  },
  {
    heading: "Business",
    price: {
      monthly: 29,
      yearly: 290,
    },
    user: "per user",
    features: {
      profiles: "10 Social Profiles",
      posts: "5 Scheduled Posts Per Profile",
      templates: "600+ Templated",
      view: "Calendar View",
      support: "24/7 VIP Support",
    },
  },
  {
    heading: "Agency",
    price: {
      monthly: 59,
      yearly: 590,
    },
    user: "per user",
    features: {
      profiles: "100 Social Profiles",
      posts: "100 Scheduled Posts Per Profile",
      templates: "800+ Templated",
      view: "Calendar View",
      support: "24/7 VIP Support",
    },
  },
];

const Manage = () => {
  const [enabled, setEnabled] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState<"yearly" | "monthly">("yearly");

  const toggleEnabled = () => {
    // Toggle the enabled state
    setEnabled((prevEnabled) => !prevEnabled);

    // Update selected category based on the switch position
    setSelectedCategory((prevCategory) => (prevCategory === "yearly" ? "monthly" : "yearly"));
  };

  const filteredData = plans.map((plan) => ({
    ...plan,
    price: plan.price[selectedCategory], // Use the selectedCategory to show either monthly or yearly
  }));

  return (
    <section id="services-section dark:bg-darkmode">
      <div className="mx-auto max-w-7xl">
        <h3 className="text-center text-6xl font-black mx-24">
          Manage All Your Social Media Profiles From One Place.
        </h3>

        <div className="md:flex md:justify-around mt-20">
          <div className="flex gap-5 justify-center md:justify-start">
            <Image src="/images/manage/right.svg" alt="right-icon" width={21} height={14} />
            <h4 className="text-18 font-semibold">Free 15-day trial</h4>
          </div>
          <div className="flex gap-5 justify-center md:justify-start">
            <Image src="/images/manage/right.svg" alt="right-icon" width={21} height={14} />
            <h4 className="text-18 font-semibold">Unlimited Team Members</h4>
          </div>
          <div className="flex gap-5 justify-center md:justify-start">
            <Image src="/images/manage/right.svg" alt="right-icon" width={21} height={14} />
            <h4 className="text-18 font-semibold">Cancel Anytime</h4>
          </div>
        </div>

        <div className="mt-6 relative">
          <div className="dance-text -ml-80 text-center -rotate-[10deg] mb-5">get 3 months free</div>
          <Image src="/images/manage/toggle.svg" alt="toggle-image" width={24} height={24} className="absolute left-[37%] top-8" />
          <div className="flex justify-center">
            <h3 className="text-14 font-medium mr-5">Billed Yearly</h3>
            <Switch
              checked={enabled}
              onChange={toggleEnabled}
              className="relative inline-flex h-6 w-11 items-center rounded-full bg-black"
            >
              <span className="sr-only">Toggle billing period</span>
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition ${enabled ? "translate-x-6" : "translate-x-1"}`}
              />
            </Switch>
            <h3 className="text-14 font-medium ml-5">Billed Monthly</h3>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mt-16 gap-14 manage">
          {filteredData.map((items, i) => (
            <div className="shadow-manage-shadow border border-border text-center p-10" key={i}>
              <h4 className="text-2xl font-bold mb-3">{items.heading}</h4>
              <h2 className="text-6xl font-extrabold mb-3">${items.price}</h2>
              <p className="text-14 font-medium text-darkgrey mb-6">{items.user}</p>

              <button className="text-14 font-bold text-primary bg-transparent hover:bg-primary hover:text-white border-2 border-primary rounded-full py-4 px-12 mb-6">
                Start My 15-day Trial
              </button>
              {/* Map through the features object and render each key-value pair dynamically */}
              {Object.entries(items.features).map(([key, value]) => (
                <h3 className="text-sm font-medium text-darkgrey mb-3" key={key}>
                  {value}
                </h3>
              ))}
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Manage;
</file>

<file path="src/components/Home/Testimonials/index.tsx">
"use client";
import React from "react";
import Slider from "react-slick";
import Image from "next/image";
import { Icon } from "@iconify/react";
import { Testimonials } from "@/app/api/data";

interface TestimonialType {
  name: string;
  profession: string;
  comment: string;
  imgSrc: string;
  rating: number;
}

interface TestimonialCardProps {
  items: TestimonialType;
}

const settings = {
  dots: false,
  infinite: true,
  slidesToShow: 3,
  slidesToScroll: 2,
  arrows: false,
  autoplay: false,
  speed: 500,
  autoplaySpeed: 2000,
  cssEase: "linear",
  responsive: [
    {
      breakpoint: 1200,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
    {
      breakpoint: 800,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
    {
      breakpoint: 450,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
  ],
};

const TestimonialCard: React.FC<TestimonialCardProps> = ({ items }) => {
  const validRating = Math.min(Math.max(items.rating, 0), 5);

  return (
    <div className="relative py-10">
      <div className="bg-white dark:bg-darkHeroBg shadow-testimonial m-3 p-10 rounded-3xl">
        <Image
          src={items.imgSrc}
          alt={`${items.name} - ${items.profession} testimonial image`}
          width={71}
          height={71}
          className="inline-block m-auto absolute top-3"
        />
        <h4 className="text-16 font-medium text-testColor my-4 text-black dark:text-white">
          {items.comment}
        </h4>
        <hr style={{ color: "border" }} />
        <div className="flex justify-between">
          <div>
            <h3 className="text-16 font-medium pt-4 pb-2 text-black dark:text-white">
              {items.name}
            </h3>
            <h3 className="text-xs font-medium pb-2 text-black/50 dark:text-white/50">
              {items.profession}
            </h3>
          </div>
          <div className="flex mt-5">
            {Array.from({ length: 5 }, (_, i) => (
              <Icon
                key={i}
                icon="twemoji:star"
                width="18"
                className={`mr-1 ${i < validRating ? "text-yellow-500" : "text-gray-300"}`}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

const Testimonial: React.FC = () => {
  return (
    <section className="bg-testimonial dark:bg-darkmode bg-cover bg-center overflow-hidden before:absolute before:w-full before:h-full before:bg-[url('/images/wework/elipse.svg')] before:bg-no-repeat before:bg-center" id="testimonial-section">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md)">
        <div className="">
          <div className="text-center">
            <h3 className="text-4xl sm:text-6xl font-bold text-black dark:text-white my-3">
              See what others are saying.
            </h3>
            <h3 className="text-4xl sm:text-6xl font-bold text-black/50 dark:text-white/50 lg:mr-48 my-4">
              See what others are saying.
            </h3>
            <h3 className="text-4xl sm:text-6xl font-bold text-black/25 dark:text-white/25 lg:-mr-32 my-4">
              See what others are saying.
            </h3>
          </div>
          <div className="mt-20">
            <Slider {...settings}>
              {Testimonials.map((items, i) => (
                <TestimonialCard key={i} items={items} />
              ))}
            </Slider>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Testimonial;
</file>

<file path="src/components/Layout/Header/Navigation/HeaderLink.tsx">
"use client";
import { useState } from "react";
import Link from "next/link";
import { HeaderItem } from "../../../../types/menu";
import { usePathname } from "next/navigation";

const HeaderLink: React.FC<{ item: HeaderItem }> = ({ item }) => {
  const [submenuOpen, setSubmenuOpen] = useState(false);
  const path = usePathname();
  const handleMouseEnter = () => {
    if (item.submenu) {
      setSubmenuOpen(true);
    }
  };
  const handleMouseLeave = () => {
    setSubmenuOpen(false);
  };

  return (
    <div
      className="relative"
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      <Link
        href={item.href}
        className={`text-lg flex hover:text-black capitalized  ${
          path === item.href ? "text-black/75 " : " text-black/75 "
        }`}
      >
        {item.label}
        {item.submenu && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="1.5em"
            height="1.5em"
            viewBox="0 0 24 24"
          >
            <path
              fill="none"
              stroke="currentColor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="1.5"
              d="m7 10l5 5l5-5"
            />
          </svg>
        )}
      </Link>
      {submenuOpen && (
        <div
          className={`absolute py-2 left-0 mt-0.5 w-60 bg-white dark:bg-darklight dark:text-white shadow-lg rounded-lg `}
          data-aos="fade-up"
          data-aos-duration="500"
        >
          {item.submenu?.map((subItem, index) => (
            <Link
              key={index}
              href={subItem.href}
              className={`block px-4 py-2   ${
                path === subItem.href
                  ? "text-white"
                  : "text-black dark:text-white hover:bg-primary"
              }`}
            >
              {subItem.label}
            </Link>
          ))}
        </div>
      )}
    </div>
  );
};

export default HeaderLink;
</file>

<file path="src/components/Layout/Header/Navigation/MobileHeaderLink.tsx">
import { useState } from "react";
import Link from "next/link";
import { HeaderItem } from "../../../../types/menu";

const MobileHeaderLink: React.FC<{ item: HeaderItem }> = ({ item }) => {
  const [submenuOpen, setSubmenuOpen] = useState(false);

  const handleToggle = () => {
    setSubmenuOpen(!submenuOpen);
  };

  return (
    <div className="relative w-full">
      <Link
        href={item.href}
        onClick={item.submenu ? handleToggle : undefined}
        className="flex items-center justify-between w-full py-2 text-muted focus:outline-hidden"
      >
        {item.label}
        {item.submenu && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="1.5em"
            height="1.5em"
            viewBox="0 0 24 24"
          >
            <path
              fill="none"
              stroke="currentColor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="1.5"
              d="m7 10l5 5l5-5"
            />
          </svg>
        )}
      </Link>
      {submenuOpen && item.submenu && (
        <div className="bg-white p-2 w-full">
          {item.submenu.map((subItem, index) => (
            <Link
              key={index}
              href={subItem.href}
              className="block py-2 text-gray-500 hover:bg-gray-200"
            >
              {subItem.label}
            </Link>
          ))}
        </div>
      )}
    </div>
  );
};

export default MobileHeaderLink;
</file>

<file path="src/components/Layout/Header/ThemeToggler.tsx">
'use client'
import { useTheme } from "next-themes";

const ThemeToggler = () => {
  const { theme, setTheme } = useTheme();
  return (
    <button
      aria-label="theme toggler"
      onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
      className="text-body-color flex h-8 w-8 items-center justify-center duration-300 dark:text-white"
    >
      <span>
        <svg
          viewBox="0 0 16 16"
          className="hidden h-[22px] w-[22px] fill-current dark:block"
        >
          <path d="M4.50663 3.2267L3.30663 2.03337L2.36663 2.97337L3.55996 4.1667L4.50663 3.2267ZM2.66663 7.00003H0.666626V8.33337H2.66663V7.00003ZM8.66663 0.366699H7.33329V2.33337H8.66663V0.366699V0.366699ZM13.6333 2.97337L12.6933 2.03337L11.5 3.2267L12.44 4.1667L13.6333 2.97337ZM11.4933 12.1067L12.6866 13.3067L13.6266 12.3667L12.4266 11.1734L11.4933 12.1067ZM13.3333 7.00003V8.33337H15.3333V7.00003H13.3333ZM7.99996 3.6667C5.79329 3.6667 3.99996 5.46003 3.99996 7.6667C3.99996 9.87337 5.79329 11.6667 7.99996 11.6667C10.2066 11.6667 12 9.87337 12 7.6667C12 5.46003 10.2066 3.6667 7.99996 3.6667ZM7.33329 14.9667H8.66663V13H7.33329V14.9667ZM2.36663 12.36L3.30663 13.3L4.49996 12.1L3.55996 11.16L2.36663 12.36Z" />
        </svg>

        <svg
          viewBox="0 0 23 23"
          className="h-[30px] w-[30px] fill-current dark:hidden"
        >
          <g clipPath="url(#clip0_40_125)">
            <path d="M16.6111 15.855C17.591 15.1394 18.3151 14.1979 18.7723 13.1623C16.4824 13.4065 14.1342 12.4631 12.6795 10.4711C11.2248 8.47905 11.0409 5.95516 11.9705 3.84818C10.8449 3.9685 9.72768 4.37162 8.74781 5.08719C5.7759 7.25747 5.12529 11.4308 7.29558 14.4028C9.46586 17.3747 13.6392 18.0253 16.6111 15.855Z" />
          </g>
        </svg>
      </span>
    </button>
  );
};

export default ThemeToggler;
</file>

<file path="src/components/ScrollToTop/index.tsx">
'use client'
import { useEffect, useState } from "react";

export default function ScrollToTop() {
  const [isVisible, setIsVisible] = useState(false);

  // Top: 0 takes us all the way back to the top of the page
  // Behavior: smooth keeps it smooth!
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  };

  useEffect(() => {
    // Button is displayed after scrolling for 500 pixels
    const toggleVisibility = () => {
      if (window.pageYOffset > 300) {
        setIsVisible(true);
      } else {
        setIsVisible(false);
      }
    };

    window.addEventListener("scroll", toggleVisibility);

    return () => window.removeEventListener("scroll", toggleVisibility);
  }, []);

  return (
    <div className="fixed bottom-8 right-8 z-999">
      {isVisible && (
        <div
          onClick={scrollToTop}
          aria-label="scroll to top"
          className="back-to-top flex h-10 w-10 cursor-pointer items-center justify-center rounded-md bg-[#102C46] text-white shadow-md transition duration-300 ease-in-out hover:bg-dark"
        >
          <span className="mt-[6px] h-3 w-3 rotate-45 border-l border-t border-white"></span>
        </div>
      )}
    </div>
  );
}
</file>

<file path="src/components/SharedComponent/Blog/blogCard.tsx">
import React, { FC } from "react";
import Image from "next/image";
import { Blog } from "@/types/blog";
import { format } from "date-fns";
import Link from "next/link";

const BlogCard = ({ blog }: { blog: Blog }) => {
    const { title, coverImage, excerpt, date, slug } = blog;
    return (
        <>
            <Link href={`/blog/${slug}`} className="group mb-10 flex items-center gap-9">
                <div className="overflow-hidden rounded-lg">
                    <Image 
                        src={coverImage}
                        alt="image"
                        width={300}
                        height={250}
                        className="group-hover:scale-110 duration-300"
                    />
                </div>
                <div className="">
                    <span className="text-16 text-dark_grey mb-1">
                        {format(new Date(date), "MMM dd yyyy")}
                    </span>
                    <h5 className="text-22 font-medium mb-9 group-hover:text-primary">
                        {title}
                    </h5>
                    <p className="text-primary text-17 font-medium ">
                        Read More
                    </p>
                </div>
            </Link>
        </>
    );
};

export default BlogCard;
</file>

<file path="src/components/SharedComponent/Blog/index.tsx">
import React from 'react';
import Link from 'next/link';
import { Icon } from "@iconify/react"
import BlogCard from './blogCard';
import { getAllPosts } from "@/utils/markdown";

const Blog: React.FC = () => {
    const posts = getAllPosts(["title", "date", "excerpt", "coverImage", "slug"]).slice(0, 3);

    return (
        <section className="flex flex-wrap justify-center py-24 " id="blog">
            <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md)">
                <div className="flex items-baseline justify-between flex-wrap">
                    <h2 className="sm:mb-11 mb-3 text-36 font-bold text-midnight_text dark:text-white" data-aos="fade-right" data-aos-delay="200" data-aos-duration="1000">Latest blog & news</h2>
                    <Link href="#" className="flex items-center gap-3 text-17 text-midnight_text dark:text-white dark:hover:text-primary font-medium hover:text-primary sm:pb-0 pb-3" data-aos="fade-left" data-aos-delay="200" data-aos-duration="1000">
                        View More
                        <span>
                            <Icon
                                icon="solar:arrow-right-outline"
                                width="30"
                                height="30"
                            />
                        </span>
                    </Link>
                </div>
                <div className="grid grid-cols-12 gap-7">
                    {posts.map((blog, i) => (
                        <div key={i} className="w-full md:col-span-4 col-span-6" data-aos="fade-up" data-aos-delay="200" data-aos-duration="1000">
                            <BlogCard blog={blog} />
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
}

export default Blog;
</file>

<file path="src/components/SharedComponent/HeroSub/index.tsx">
import React, { FC } from "react";

interface HeroSubProps {
    title: string;
}

const HeroSub: FC<HeroSubProps> = ({ title }) => {

    return (
        <>
            <section className="py-40 bg-herosub-bg bg-no-repeat bg-cover lg:mt-40 sm:mt-44 mt-20">
                <div className="container mx-auto lg:max-w-(--breakpoint-xl) px-4">
                    <h2 className="text-white md:text-56 text-36 font-medium">{title}</h2>
                </div>
            </section>
        </>
    );
};

export default HeroSub;
</file>

<file path="src/components/SharedComponent/Volunteer/index.tsx">
import Link from "next/link";

const Volunteer = () => {
    return (
        <section className="py-28 bg-volunteer-bg bg-no-repeat bg-cover">
            <div className="container mx-auto lg:max-w-(--breakpoint-xl) px-4">
                <div className="text-center">
                    <h2 className="text-30 font-medium text-white mb-6">
                        Become a Volunteer
                    </h2>
                    <p className="text-16 text-white lg:max-w-60% mx-auto mb-6">
                        Lorem ipsum dolor sit amet, consectetur adipiscelit. Nam malesu dolor sit amet, consectetur adipiscelit. consectetur adipiscelit. Nam malesu dolor.
                    </p>
                    <div className="flex justify-center ">
                        <Link href="#" className="text-white bg-linear-to-r from-error to-warning px-7 py-5 hover:from-transparent hover:to-transparent border border-transparent hover:border-error hover:text-error rounded-sm">
                            Donate now
                        </Link>
                    </div>
                </div>
            </div>
        </section>
    )
}

export default Volunteer;
</file>

<file path="src/types/blog.ts">
export type Blog = {
  id?: number;
  title?: string;
  slug?: string;
  excerpt?: string;
  coverImage: string;
  date: string;
};
</file>

<file path="src/types/breadcrumb.ts">
export interface BreadcrumbProps {
  pageName: string;
  pageDescription?: string;
}

export interface BreadcrumbLink {
  href: string;
  text: string;
}
</file>

<file path="src/types/menu.ts">
export type SubmenuItem = {
    label: string;
    href: string;
  };    
  
  export type HeaderItem = {
    label: string;
    href: string;
    submenu?: SubmenuItem[];
  };
</file>

<file path="src/utils/aos.tsx">
'use client'
import { useEffect } from "react";
import AOS from "aos"
import 'aos/dist/aos.css';

const Aoscompo = ({children}:any) => {
    useEffect(() => {
        AOS.init({
            duration: 800,
            once: false,
        })
    }, [])
  return (
    <div>
      {children}
    </div>
  )
}

export default Aoscompo
</file>

<file path="src/utils/markdown.ts">
import fs from "fs";
import matter from "gray-matter";
import { join } from "path";

const postsDirectory = join(process.cwd(), "markdown/Blog");

export function getPostSlugs() {
  return fs.readdirSync(postsDirectory);
}

export function getPostBySlug(slug: string, fields: string[] = []) {  
  const realSlug = slug.replace(/\.mdx$/, "");
  const fullPath = join(postsDirectory, `${realSlug}.mdx`);
  const fileContents = fs.readFileSync(fullPath, "utf8");
  const { data, content } = matter(fileContents);

  type Items = {
    // [key: string]: string;
    [key: string]: string | object;
  };

  const items: any = {};

  function processImages(content: string) {
    // You can modify this function to handle image processing
    // For example, replace image paths with actual HTML image tags
    return content.replace(/!\[.*?\]\((.*?)\)/g, '<img src="$1" alt="" />');
  }

  // Ensure only the minimal needed data is exposed
  fields.forEach((field) => {
    if (field === "slug") {
      items[field] = realSlug;
    }
    if (field === "content") {
      // You can modify the content here to include Images
      items[field] = processImages(content);
    }

    if (field === "metadata") {
      // Include metadata, including the image information
      items[field] = { ...data, coverImage: data.coverImage || null };
    }

    if (typeof data[field] !== "undefined") {
      items[field] = data[field];
    }
  });

  return items;
}

export function getAllPosts(fields: string[] = []) {
  const slugs = getPostSlugs();
  const posts = slugs
    .map((slug) => getPostBySlug(slug, fields))
    // sort posts by date in descending order
    .sort((post1, post2) => (post1.date > post2.date ? -1 : 1));

  return posts;
}
</file>

<file path="src/utils/markdownToHtml.ts">
import { remark } from "remark";
import html from "remark-html";

export default async function markdownToHtml(markdown: string) {
  const result = await remark().use(html).process(markdown);
  return result.toString();
}
</file>

<file path="src/utils/validateEmail.ts">
export const validateEmail = (email: string) => {
  return String(email)
    .toLowerCase()
    .match(
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
    );
};
</file>

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
</file>

<file path=".npmrc">
legacy-peer-deps=true
</file>

<file path="next.config.mjs">
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    unoptimized: true,
  },
}

export default nextConfig
</file>

<file path="postcss.config.mjs">
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    '@tailwindcss/postcss': {},
  },
};

export default config;
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "./src/*"
      ]
    },
    "target": "ES2017"
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="src/app/api/data.tsx">
import { Icon } from "@iconify/react/dist/iconify.js";
export const ProductType: { id: number; section: string; link: string[]; }[] = [
  {
    id: 1,
    section: "Menu",
    link: ['Home', 'Popular', 'About', 'Contact'],
  },
  {
    id: 2,
    section: "Category",
    link: ['Design', 'Mockup', 'View all', 'Log In']
  },
  {
    id: 3,
    section: "Pages",
    link: ['404', 'Instructions', 'License']
  },
  {
    id: 4,
    section: "Others",
    link: ['Styleguide', 'Changelog']
  }
];


export const Aboutdata: { heading: string; imgSrc: string; paragraph: string; link: string; }[] = [
  {
    heading: "About us.",
    imgSrc: "/images/aboutus/imgOne.svg",
    paragraph:
      "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem",
    link: "Contact Us",
  },
  {
    heading: "Services.",
    imgSrc: "/images/aboutus/imgTwo.svg",
    paragraph:
      "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem",
    link: "Contact Us",
  },
  {
    heading: "Our Works.",
    imgSrc: "/images/aboutus/imgThree.svg",
    paragraph:
      "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem",
    link: "Contact Us",
  },
];

export const DataType: { profession: string; name: string; imgSrc: string; }[] = [
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar.svg",
  },
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar3.svg",
  },
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar4.svg",
  },
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar.svg",
  },
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar3.svg",
  },
  {
    profession: "Co-founder",
    name: "John Doe",
    imgSrc: "/images/wework/avatar4.svg",
  },
];

export const postData: { heading: string; imgSrc: string; }[] = [
  {
    heading: "Brand design for a computer brand.",
    imgSrc: "/images/featured/feat1.jpg",
  },
  {
    heading: "Mobile app 3d wallpaper.",
    imgSrc: "/images/featured/feat2.jpg",
  },
  {
    heading: "Brand design for a computer brand.",
    imgSrc: "/images/featured/feat1.jpg",
  },
  {
    heading: "Mobile app 3d wallpaper.",
    imgSrc: "/images/featured/feat2.jpg",
  },
];

export const Testimonials: { profession: string; comment: string; imgSrc: string; name: string; rating: number }[] = [
  {
    name: "Robert Fox",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user1.svg",
    rating: 5,
  },
  {
    name: "Leslie Alexander",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user2.svg",
    rating: 4,
  },
  {
    name: "Cody Fisher",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user3.svg",
    rating: 4,
  },
  {
    name: "Robert Fox",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user1.svg",
    rating: 4,
  },
  {
    name: "Leslie Alexander",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user2.svg",
    rating: 4,
  },
  {
    name: "Cody Fisher",
    profession: "CEO, Parkview Int.Ltd",
    comment:
      "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour",
    imgSrc: "/images/testimonial/user3.svg",
    rating: 4,
  },
];


export const Article: { time: string; heading: string; heading2: string; date: string; imgSrc: string; name: string; }[] = [
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article.png",
  },
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article2.png",
  },
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article3.png",
  },
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article.png",
  },
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article2.png",
  },
  {
    time: "5 min",
    heading: "We Launch Delia",
    heading2: "Webflow this Week!",
    name: "Published on Startupon",
    date: "August 19, 2021",
    imgSrc: "/images/articles/article3.png",
  },
];
</file>

<file path="src/components/Home/Featured/index.tsx">
"use client";
import React from "react";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Image from "next/image";
import { postData } from "@/app/api/data";

function SampleNextArrow(props: { className: any; style: any; onClick: any }) {
  const { className, style, onClick } = props;
  return (
    <div
      className={className}
      style={{
        ...style,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        background: "rgba(255, 255, 255, 0.3)",
        padding: "28px",
        borderRadius: "20px",
      }}
      onClick={onClick}
    />
  );
}

function SamplePrevArrow(props: { className: any; style: any; onClick: any }) {
  const { className, style, onClick } = props;
  return (
    <div
      className={className}
      style={{
        ...style,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        background: "rgba(255, 255, 255, 0.3)",
        padding: "28px",
        borderRadius: "20px",
      }}
      onClick={onClick}
    />
  );
}
const settings = {
  dots: false,
  infinite: true,
  slidesToShow: 2,
  slidesToScroll: 1,
  arrows: true,
  autoplay: false,
  speed: 500,
  nextArrow: (
    <SampleNextArrow
      className={undefined}
      style={undefined}
      onClick={undefined}
    />
  ),
  prevArrow: (
    <SamplePrevArrow
      className={undefined}
      style={undefined}
      onClick={undefined}
    />
  ),
  cssEase: "linear",
  responsive: [
    {
      breakpoint: 800,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
      },
    },
  ],
};

const Featured = () => {
  return (
    <section className="relative bg-deepSlate dark:bg-darkmode -mt-60 sm:-mt-80 pt-60 sm:pt-80 after:absolute after:w-1/4 after:h-1/4 after:bg-[url('/images/wework/vector.svg')] after:top-72 after:right-0 after:bg-no-repeat overflow-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) relative px-4">
        <div className="text-center mt-16 sm:mt-24">
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white my-2">
            Featured works.
          </h3>
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white/50 lg:mr-48 my-2">
            Featured works.
          </h3>
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white/25 lg:-mr-32 my-2">
            Featured works.
          </h3>
        </div>

        <Slider {...settings}>
          {postData.map((items, i) => (
            <div key={i}>
              <div className="bg-transparent m-2 sm:m-3 rounded-3xl">
                <Image
                  src={items.imgSrc}
                  alt="gaby"
                  width={636}
                  height={620}
                  className="rounded-2xl w-full h-auto"
                />
                <div className="w-full max-w-sm mx-auto sm:max-w-none sm:mx-0">
                  <h4 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-center sm:text-start mt-8 sm:mt-12 text-white px-4 sm:px-0">
                    {items.heading}
                  </h4>
                </div>
              </div>
            </div>
          ))}
        </Slider>
      </div>
    </section>
  );
};
export default Featured;
</file>

<file path="src/components/Layout/Header/Navigation/menuData.tsx">
import { HeaderItem } from "@/types/menu";

export const headerData: HeaderItem[] = [
  // Empty array - no navigation menu items
];
</file>

<file path="src/components/NotFound/index.tsx">
import React from "react";
import Image from "next/image";
import Link from "next/link";

const NotFound = () => {
  return (
    <section className="bg-white pt-8 pb-20">
      <div className="container mx-auto">
        <div className="-mx-4 flex flex-wrap items-center">
          <div className="w-full px-4 md:w-5/12 lg:w-6/12">
            {/* <div className="relative mx-auto aspect-129/138 max-w-[357px] text-center">
              <Image
                src="/images/404.svg"
                alt="image"
                width={0}
                height={0}
                layout="responsive"
                quality={100}
                className="mx-auto max-w-full"
              />
            </div> */}
          </div>
          <div className="w-full px-4 md:w-7/12 lg:w-6/12 xl:w-5/12">
            <div>
             
              <h3 className="mb-5 text-2xl font-semibold text-dark dark:text-white">
                We Can&#39;t Seem to Find The Page You&#39;re Looking For.
              </h3>
              <p className="mb-8 text-base text-body-color dark:text-dark-6">
                Oops! The page you are looking for does not exist. It might have
                been moved or deleted.
              </p>
              <Link
                href="/"
                className="rounded-md px-7 py-3 text-base font-medium text-white transition hover:bg-blue-700 bg-primary"
              >
                Go To Home
              </Link>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default NotFound;
</file>

<file path="package.json">
{
  "name": "haloweave-website",
  "version": "2.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.0",
    "@iconify/icons-ion": "^1.2.10",
    "@iconify/react": "^5.0.1",
    "aos": "^2.3.4",
    "axios": "^1.7.2",
    "date-fns": "^3.4.0",
    "framer-motion": "^11.11.9",
    "gray-matter": "^4.0.3",
    "next": "^15.2.4",
    "next-auth": "^4.24.7",
    "next-themes": "^0.3.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hot-toast": "^2.4.1",
    "react-slick": "^0.30.2",
    "remark": "^15.0.1",
    "remark-html": "^16.0.1",
    "slick-carousel": "^1.8.1"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.1.2",
    "@types/aos": "^3.0.7",
    "@types/node": "^20",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.1",
    "@types/react-slick": "^0.23.13",
    "postcss": "^8",
    "tailwindcss": "^4.1.2",
    "typescript": "^5"
  }
}
</file>

<file path="src/app/globals.css">
@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --container-screen-xl: 75rem;
  --container-screen-2xl: 83.75rem;

  --shadow-cause-shadow: 0px 4px 17px 0px #00000008;
  --shadow-linckedin: 0px 19px 30px 0px #00000033;
  --shadow-manage-shadow: 0px 4px 5px 1px #c1c1c159;
  --shadow-testimonial: 0px 5px 10px 0px #5968760d;

  --transition-duration-150: 150ms;

  --spacing-25: 35.625rem;
  --spacing-29: 28rem;
  --spacing-45: 45rem;
  --spacing-50: 50rem;
  --spacing-51: 54.375rem;
  --spacing-85: 21rem;
  --spacing-94: 22.5rem;
  --spacing-120: 120rem;
  --spacing-6_25: 6.25rem;
  --spacing-70\%: 70%;
  --spacing-40\%: 40%;
  --spacing-30\%: 30%;
  --spacing-80\%: 80%;
  --spacing-8_5: 8.5rem;
  --spacing-3_75: 3.75rem;

  --inset-5\%: 5%;
  --inset-35\%: 35%;

  --z-index-1: 1;
  --z-index-2: 2;
  --z-index-999: 999;

  --color-primary: #0066ff;
  --color-purple: #1e013a;
  --color-grey: #f4f5f6;
  --color-border: #dbdbdb;
  --color-darkmode: #00224a;
  --color-deep-slate: #02398a;

  --text-80: 5rem;
  --text-80--line-height: 1.4;

  --blur-220: 220px;
  --blur-400: 400px;

  --background-image-faq-bg: url('/images/faq/swirl.png');
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

html {
  scroll-behavior: smooth;
  overflow-x: hidden;
}

body {
  overflow-x: hidden;
}

section {
  @apply py-32;
}

.slick-next {
  right: -70px !important;
}

.slick-prev {
  left: -70px !important;
}

@media (max-width: 640px) {
  .slick-next {
    right: -30px !important;
  }
  
  .slick-prev {
    left: -30px !important;
  }
}

.bg-joinus {
  background-image: url('/images/joinus/horn.svg'),
    url('/images/joinus/paint.svg');
  background-repeat: no-repeat, no-repeat;
  background-position: 84% 100%, 12% 18%;
}

.dotted-sketch-bg {
  position: relative;
}

.dotted-sketch-bg::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    radial-gradient(circle at 20% 30%, rgba(0, 102, 255, 0.025) 1px, transparent 1px),
    radial-gradient(circle at 70% 20%, rgba(0, 102, 255, 0.02) 1px, transparent 1px),
    radial-gradient(circle at 40% 60%, rgba(0, 102, 255, 0.03) 1px, transparent 1px),
    radial-gradient(circle at 80% 70%, rgba(0, 102, 255, 0.02) 1px, transparent 1px),
    radial-gradient(circle at 10% 80%, rgba(0, 102, 255, 0.025) 1px, transparent 1px),
    radial-gradient(circle at 90% 40%, rgba(0, 102, 255, 0.02) 1px, transparent 1px);
  background-size: 60px 60px, 80px 80px, 45px 45px, 70px 70px, 55px 55px, 65px 65px;
  z-index: -10;
  pointer-events: none;
}
</file>

<file path="src/components/Home/FAQ/index.tsx">
"use client"
import React from "react";
import { Icon } from "@iconify/react";
import { Disclosure } from "@headlessui/react";

const FAQ = () => {
  return (
    <section className="relative py-1 bg-cover bg-center overflow-hidden dark:bg-darkmode">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) px-4">
        <div className="relative rounded-2xl py-16 sm:py-20 lg:py-24 bg-faqBg bg-no-repeat bg-cover bg-primary">
          <p className="text-base sm:text-lg font-normal text-white text-center mb-4 sm:mb-6 px-4">FAQ</p>
          <h2 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-semibold text-center text-white px-4 sm:px-8 md:px-16 lg:px-24 xl:px-72 mb-8 sm:mb-12 lg:mb-16">
            Frequently asked questions.
          </h2>
          <div className="w-full px-4 sm:px-6 lg:px-8">
            <div className="mx-auto w-full max-w-5xl rounded-2xl p-4 sm:p-6 lg:p-8 bg-white mb-4 sm:mb-5">
              <Disclosure>
                {({ open }) => (
                  <div>
                    <Disclosure.Button className="flex w-full justify-between items-center text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden ">
                      <span className="text-black">How much will my project cost?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-sm sm:text-base text-black/50 font-normal text-left pt-4 mt-4 sm:mt-6 border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        Honestly? It depends on what you need. A simple website might be $8,000-$20,000, while a custom app or complex platform could be $30,000-$80,000+. We don't do cookie-cutter pricing because every project is unique. The best way to get a real number? Just tell us what you're dreaming up and we'll give you a straight answer.
                      </div>
                    </Disclosure.Panel>
                  </div>
                )}
              </Disclosure>
            </div>
            <div className="mx-auto w-full max-w-5xl rounded-2xl p-4 sm:p-6 lg:p-8 bg-white mb-4 sm:mb-5">
              <Disclosure as="div" className="mt-2">
                {({ open }) => (
                  <>
                    <Disclosure.Button className="flex w-full justify-between items-center rounded-lg text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden">
                      <span className="text-black">How long does it actually take?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-base text-black/50 pt-4 mt-6 text-left border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        Most projects take 6-12 weeks, but we're not fans of rushing good work. We'd rather take an extra week to get it right than deliver something that's just "okay." We'll give you a realistic timeline upfront, no BS, no surprise delays. Quality takes time, and we think you deserve both.
                      </div>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            </div>

            <div className="mx-auto w-full max-w-5xl rounded-2xl p-4 sm:p-6 lg:p-8 bg-white mb-4 sm:mb-5">
              <Disclosure as="div" className="mt-2">
                {({ open }) => (
                  <>
                    <Disclosure.Button className="flex w-full justify-between items-center rounded-lg text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden">
                      <span className="text-black">What do I need to get started?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-base text-black/50 pt-4 mt-6 font-normal text-left border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        Just your idea and some enthusiasm! We'll handle the rest. During our first chat, we'll dig into what you're trying to build, who it's for, and what success looks like. Don't worry if things are still fuzzy, we're pretty good at turning "I need something like..." into something amazing.
                      </div>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            </div>

            <div className="mx-auto w-full max-w-5xl rounded-2xl p-4 sm:p-6 lg:p-8 bg-white mb-4 sm:mb-5">
              <Disclosure as="div" className="mt-2">
                {({ open }) => (
                  <>
                    <Disclosure.Button className="flex w-full justify-between items-center rounded-lg text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden">
                      <span className="text-black">Do you work with existing teams?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-base text-black/50 pt-4 mt-6 font-normal text-left border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        Absolutely! We play nice with others. Whether your team needs extra hands, specialized skills, or just someone to take the lead on a project, we adapt to how you work. We've collaborated with in-house teams, agencies, and solo founders, whatever works best for you.
                      </div>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            </div>

            <div className="mx-auto w-full max-w-5xl rounded-2xl p-4 sm:p-6 lg:p-8 bg-white mb-4 sm:mb-5">
              <Disclosure as="div" className="mt-2">
                {({ open }) => (
                  <>
                    <Disclosure.Button className="flex w-full justify-between items-center rounded-lg text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden">
                      <span className="text-black">Can you sign an NDA?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-base text-black/50 pt-4 mt-6 font-normal text-left border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        Of course! We get it, your idea is precious and you want to keep it safe. We're happy to sign NDAs before we even start talking. Your secrets are safe with us, and we take confidentiality seriously.
                      </div>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            </div>

            <div className="mx-auto w-full max-w-5xl rounded-2xl p-8 bg-white">
              <Disclosure as="div" className="mt-2">
                {({ open }) => (
                  <>
                    <Disclosure.Button className="flex w-full justify-between items-center rounded-lg text-left text-lg sm:text-xl lg:text-2xl font-medium focus:outline-hidden">
                      <span className="text-black">What happens after you're done?</span>
                      <div
                        className={`h-5 w-5 transform transition-transform duration-300 ${open ? "rotate-180" : ""
                          }`}
                      >
                        <Icon icon="lucide:chevron-up" width="20" height="20" />
                      </div>
                    </Disclosure.Button>
                    <Disclosure.Panel className="text-base text-black/50 pt-4 mt-6 font-normal text-left border-t border-border">
                      <div className="max-w-full lg:max-w-70%">
                        We don't just disappear! You get everything, source code, documentation, design files, the works. If you want to hand things over to your team, we'll make sure they're set up for success. Plus, we're always here if you need updates, improvements, or just have questions down the road.
                      </div>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};
export default FAQ;
</file>

<file path="src/components/Home/Team/index.tsx">
import React from "react";
import Image from "next/image";

const Team = () => {
  return (
    <section className="overflow-x-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) relative">
        <h2 className="text-6xl font-bold text-center mx-20">
          Our team belives you deserve only the best.
        </h2>
        <h3 className="text-2xl font-medium text-center pt-10 text-black/50 mx-52">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
          eiusmod tempor.
        </h3>
        <div className="grid grid-cols-1 mt-16">
          <Image
            src="/images/team/teamimg.png"
            alt="office-image"
            height={684}
            width={1296}
            className="relative z-1"
          />
        </div>
      </div>
    </section>
  );
};

export default Team;
</file>

<file path="src/components/Home/Work/index.tsx">
"use client";
import React from "react";
import Image from "next/image";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const workData = [
  {
    imgSrc: "/images/featured/Brown Green Modern Jewelry Online Store Website UI Prototype.png",
    heading: "Jewelry Store"
  },
  {
    imgSrc: "/images/featured/Green Brown Modern Minimalist Neon Delicious Frappe Website UI Prototype.png",
    heading: "Frappe Website"
  },
  {
    imgSrc: "/images/featured/Green and White Simple Plant Desktop Prototype.png",
    heading: "Plant Desktop"
  },
  {
    imgSrc: "/images/featured/White Simple Clothing Brand Product Detail Page UI Prototype.png",
    heading: "Clothing Brand"
  },
  {
    imgSrc: "/images/featured/Aicompass.webp",
    heading: "AI Compass"
  },
  {
    imgSrc: "/images/featured/Assistly.webp",
    heading: "Assistly"
  },
  {
    imgSrc: "/images/featured/BespokeAstrology.webp",
    heading: "Bespoke Astrology"
  },
  {
    imgSrc: "/images/featured/JourneyofCompassion.webp",
    heading: "Journey of Compassion"
  },
  {
    imgSrc: "/images/featured/RocketPosting.webp",
    heading: "Rocket Posting"
  },
  {
    imgSrc: "/images/featured/Studionaadi.webp",
    heading: "Studio Naadi"
  },
  {
    imgSrc: "/images/featured/Workmate.webp",
    heading: "Workmate"
  },
  // {
  //   imgSrc: "/images/featured/feat1.jpg",
  //   heading: "Featured Work 1"
  // },
  // {
  //   imgSrc: "/images/featured/feat2.jpg",
  //   heading: "Featured Work 2"
  // }
];

// For infinite loop, we only need to duplicate once
const duplicatedWorkData = [...workData, ...workData];

const settings = {
  dots: false,
  infinite: true,
  slidesToShow: 3,
  slidesToScroll: 1,
  arrows: false,
  autoplay: true,
  speed: 3000,
  autoplaySpeed: 0,
  cssEase: "linear",
  pauseOnHover: true,
  variableWidth: true,
  swipeToSlide: true,
  touchMove: true,
  responsive: [
    {
      breakpoint: 1200,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
        variableWidth: true,
        swipeToSlide: true,
        touchMove: true,
      },
    },
    {
      breakpoint: 800,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        infinite: true,
        dots: false,
        variableWidth: true,
        swipeToSlide: true,
        touchMove: true,
        centerMode: true,
        centerPadding: '20px',
      },
    },
  ],
};

const Work = () => {
  return (
    <section className="relative dark:bg-darkmode py-8 sm:py-12 bg-cover bg-center overflow-hidden before:absolute before:w-full before:h-full before:bg-[url('/images/wework/elipse.svg')] before:bg-no-repeat before:bg-center after:absolute after:w-1/3 after:h-1/3 after:bg-[url('/images/wework/vector.svg')] after:bg-no-repeat after:top-28 after:-right-12 after:-z-10">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) px-4">
        <div className="text-center mb-8 sm:mb-12">
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-black dark:text-white my-2">
            Some of our projects.
          </h3>
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-black/50 dark:text-white/50 lg:mr-48 my-2">
            Some of our projects.
          </h3>
          <h3 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-black/25 dark:text-white/25 lg:-mr-32 my-2">
            Some of our projects.
          </h3>
        </div>
      </div>

      <div className="h-auto sm:h-[500px] md:h-[600px] lg:h-[680px] overflow-hidden">
        <Slider {...settings}>
          {duplicatedWorkData.map((items, i) => (
            <div key={i} className="px-2 sm:px-3">
              <div className="bg-transparent rounded-3xl group cursor-pointer">
                <div className="relative overflow-hidden rounded-2xl">
                  <Image
                    src={items.imgSrc}
                    alt={items.heading}
                    width={800}
                    height={600}
                    className="rounded-2xl block object-cover transition-transform duration-300 group-hover:scale-105 w-[280px] h-[200px] sm:w-[350px] sm:h-[280px] md:w-[450px] md:h-[360px] lg:w-[550px] lg:h-[440px] xl:w-auto xl:h-[620px]"
                  />
                  <div className="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
                </div>
              </div>
            </div>
          ))}
        </Slider>
      </div>
    </section>
  );
};
export default Work;
</file>

<file path="src/components/Layout/Header/Logo/index.tsx">
import Image from "next/image";
import Link from "next/link";

const Logo: React.FC = () => {
  return (
    <Link href="/" className="flex items-center gap-2 text-xl sm:text-2xl lg:text-4xl font-semibold">
      <Image
        src="/images/logo/icon.png"
        alt="Haloweave Icon"
        width={40}
        height={40}
        className="w-6 h-6 sm:w-8 sm:h-8 lg:w-10 lg:h-10"
      />
      Haloweave
    </Link>
  );
};

export default Logo;
</file>

<file path="src/utils/sagehelp.ts">
// TypeScript implementation
interface HelpKiteSettings {
  organizationId: string;
  agentId: string;
  user?: {
    email?: string;
    emailHash?: string;
    timestamp?: number;
    name?: string;
    phone?: string;
    company?: string;
    custom_data?: Record<string, any>;
  };
  loadImmediately?: boolean;
}

// Initialize HelpKite
const initializeHelpKite = (settings: HelpKiteSettings): void => {
  if (typeof window === 'undefined') return;
  
  (window as any).helpkiteSettings = settings;
  
  (function(w: any, d: Document) {
    const sS = w.helpkiteSettings;
    if (!sS || !sS.organizationId) return;
    
    const widgetSrc = 'http://localhost:3001/w.js';
    
    w.HelpKite = function(...args: any[]) {
      w.HelpKite!.q.push(args);
    };
    w.HelpKite.q = [];
    
    function loadScript() {
      if (d.querySelector(`script[src="${widgetSrc}"]`)) return;
      const script = d.createElement('script');
      script.async = true;
      script.type = 'text/javascript';
      script.src = widgetSrc;
      (d.body || d.head).appendChild(script);
    }
    
    if (d.readyState === 'complete' || sS.loadImmediately) {
      loadScript();
    } else {
      w.addEventListener('load', loadScript, false);
    }
  })(window, document);
};

// Usage
initializeHelpKite({
  organizationId: 'fy06VMYBQw3PW5BlVsQDaaMxwAJ2Yd86',
  agentId: 'xpwn3onpey8i37vulvw49fw7',
});
</file>

<file path="src/components/Home/Joinus/index.tsx">
"use client"
import React from "react";
import Link from "next/link";

const Join = () => {
  return (
    <section className="overflow-hidden dark:bg-darkmode bg-joinus">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md)">
        <div className="text-center">
          
          <h2 className="text-6xl font-bold my-6">
            Take your business to the new level.
          </h2>
         
        </div>

        <div className="mx-auto max-w-4xl pt-5">
          <div className="text-center">
            <button
              onClick={() => {
                console.log('Join Us Contact Us button clicked');
                if (typeof window !== 'undefined' && (window as any).HelpKite) {
                  console.log('Toggling HelpKite chat...');
                  (window as any).HelpKite('toggle');
                } else {
                  console.log('HelpKite not available');
                }
              }}
              className="inline-block text-xl text-white font-semibold rounded-full bg-primary py-5 px-12 hover:bg-darkmode duration-300"
            >
              Contact Us
            </button>
          </div>
        </div>
      </div>
    </section>
  );
};
export default Join;
</file>

<file path="src/app/page.tsx">
import React from "react";
import Hero from "@/components/Home/Hero";
import Aboutus from "@/components/Home/AboutUs";
import Dedicated from "@/components/Home/Dedicated";
import Digital from "@/components/Home/Digital";
import Beliefs from "@/components/Home/Beliefs";
import Work from "@/components/Home/Work";
import Process from "@/components/Home/Process";
import Featured from "@/components/Home/Featured";
import Manage from "@/components/Home/Manage";
import FAQ from "@/components/Home/FAQ";
import Testimonial from "@/components/Home/Testimonials";
import Articles from "@/components/Home/Articles";
import Join from "@/components/Home/Joinus";
import Insta from "@/components/Home/Insta";
import Team from "@/components/Home/Team";

import { Metadata } from "next";
export const metadata: Metadata = {
  title: "Haloweave : Software Development Company",
};

export default function Home() {
  return (
    <main className="dotted-sketch-bg">
      <Hero />
       <Digital />
       <Process />
      {/* <Aboutus /> */}
      {/* <Dedicated /> */}
     
      <Beliefs />
      <Work />
      {/* <Team />
      <Featured /> */}
      {/* <Manage /> */}
      <FAQ />
      {/* <Testimonial /> */}
      {/* <Articles /> */}
      <Join />
      {/* <Insta /> */}
    </main>
  );
}
</file>

<file path="src/components/Home/Beliefs/index.tsx">
"use client";
import React from "react";

const Beliefs = () => {
  return (
    <section className="py-16 sm:py-20 bg-white dark:bg-darkmode overflow-hidden">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) px-4">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6">
          
          {/* ROW 1 - Websites (Large box 2/3) */}
          <div className="lg:col-span-2" data-aos="fade-up" data-aos-delay="100">
            <div className="bg-pink-100 dark:bg-pink-900/10 pt-12 sm:pt-16 px-6 sm:px-12 pb-16 sm:pb-20 rounded-3xl h-full">
              <h2 className="text-sm font-medium text-pink-600 dark:text-pink-400 tracking-wide mb-4 uppercase">
                Websites
              </h2>
              <h3 className="text-2xl sm:text-3xl font-bold text-pink-700 dark:text-pink-300 mb-6 leading-tight">
                Fast websites that actually work.
              </h3>
              <p className="text-pink-600/80 dark:text-pink-300/80 text-sm sm:text-base leading-relaxed">
                We build clean, modern sites that load quickly and look great. Just beautiful web experiences your users will love.
              </p>
            </div>
          </div>

          {/* ROW 1 - Mobile Apps (Small box 1/3) */}
          <div className="lg:col-span-1" data-aos="fade-up" data-aos-delay="200">
            <div className="bg-blue-100 dark:bg-blue-900/10 pt-12 sm:pt-16 px-6 sm:px-8 pb-16 sm:pb-20 rounded-3xl h-full">
              <h2 className="text-sm font-medium text-blue-600 dark:text-blue-400 tracking-wide mb-4 uppercase">
                Mobile Apps
              </h2>
              <h3 className="text-2xl sm:text-3xl font-bold text-blue-700 dark:text-blue-300 mb-6 leading-tight">
                Apps that feel natural and smooth.
              </h3>
              <p className="text-blue-600/80 dark:text-blue-300/80 text-sm sm:text-base leading-relaxed">
                From iOS to Android, we create mobile experiences with thoughtful interactions.
              </p>
            </div>
          </div>

          {/* ROW 2 - AI Software (Small box 1/3) */}
          <div className="lg:col-span-1" data-aos="fade-up" data-aos-delay="300">
            <div className="bg-green-100 dark:bg-green-900/10 pt-12 sm:pt-16 px-6 sm:px-8 pb-16 sm:pb-20 rounded-3xl h-full">
              <h2 className="text-sm font-medium text-green-600 dark:text-green-400 tracking-wide mb-4 uppercase">
                AI Products
              </h2>
              <h3 className="text-2xl sm:text-3xl font-bold text-green-700 dark:text-green-300 mb-6 leading-tight">
                AI features that solve real problems.
              </h3>
              <p className="text-green-600/80 dark:text-green-300/80 text-sm sm:text-base leading-relaxed">
                We build intelligent software that actually makes your life easier and more productive.
              </p>
            </div>
          </div>

          {/* ROW 2 - Branding & UI (Large box 2/3) */}
          <div className="lg:col-span-2" data-aos="fade-up" data-aos-delay="400">
            <div className="bg-purple-100 dark:bg-purple-900/10 pt-12 sm:pt-16 px-6 sm:px-12 pb-16 sm:pb-20 rounded-3xl h-full">
              <h2 className="text-sm font-medium text-purple-600 dark:text-purple-400 tracking-wide mb-4 uppercase">
                Branding & UI
              </h2>
              <h3 className="text-2xl sm:text-3xl font-bold text-purple-700 dark:text-purple-300 mb-6 leading-tight">
                Designs that feel uniquely yours.
              </h3>
              <p className="text-purple-600/80 dark:text-purple-300/80 text-sm sm:text-base leading-relaxed">
                Your brand should stand out, not blend in. We create memorable, friendly interfaces that are totally on-brand.
              </p>
            </div>
          </div>

        </div>
      </div>
    </section>
  );
};

export default Beliefs;
</file>

<file path="src/components/Home/Digital/index.tsx">
"use client";
import React from "react";
import Image from "next/image";
import Link from "next/link";

const Digital = () => {
  return (
    <section className="relative bg-cover bg-center dark:bg-darkmode px-4">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) rounded-3xl bg-primary bg-[url('/images/digital/bg.svg')] bg-no-repeat bg-right-top pb-40 sm:pb-60 relative">
        <div className="grid grid-cols-1 lg:grid-cols-2">
          {/* COLUMN-1 */}
          <div className="pt-16 sm:pt-20 lg:pt-24 px-6 sm:px-8 lg:pl-24">
            <h3 className="text-sm sm:text-base md:text-lg font-normal text-white mb-4 sm:mb-5 tracking-widest text-center lg:text-start uppercase mt-4 sm:mt-5">
              Zero to infinity
            </h3>
            <h4 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white/60 mb-6 sm:mb-8 leading-snug text-center lg:text-start">
              We build, <span className="text-white">High Performance</span> digital software.
            </h4>
            <h5 className="text-white/75 pt-2 mb-12 sm:mb-16 text-center lg:text-start text-base sm:text-lg max-w-3xl">
              We build MVPs to production enterprise scalable applications. Got a wild idea? We'll turn it into something real. From quick prototypes to full-scale apps that can handle millions of users, we've got you covered.
            </h5>
            
          </div>
        </div>
        <div className="absolute -bottom-8 sm:-bottom-16 right-0 sm:-right-10 lg:-right-20">
          <Image
            src="/images/digital/rocketLaunch.png"
            alt="doodle"
            width={815}
            height={691}
            className="w-48 h-auto sm:w-64 md:w-80 lg:w-96 xl:w-full max-w-none"
          />
        </div>
      </div>
    </section>
  );
};
export default Digital;
</file>

<file path="src/components/Home/Process/index.tsx">
'use client'
import React, { useState, useEffect, useRef } from 'react'
import { Icon } from '@iconify/react'

interface TimelineStep {
  id: string
  icon: string
  title: string
  content: string
}

const pastelColors = [
  { bg: "bg-pink-100", text: "text-pink-600" },
  { bg: "bg-blue-100", text: "text-blue-600" },
  { bg: "bg-green-100", text: "text-green-600" },
  { bg: "bg-purple-100", text: "text-purple-600" },
  { bg: "bg-orange-100", text: "text-orange-600" },
  { bg: "bg-teal-100", text: "text-teal-600" },
  { bg: "bg-indigo-100", text: "text-indigo-600" }
];

const timelineSteps: TimelineStep[] = [
  {
    id: 'brainstorm',
    icon: 'mdi:brain',
    title: 'Brainstorm',
    content: 'We start by understanding your business needs and goals. Our team collaborates with you to identify key requirements, target audience, and project objectives to create a clear vision for your digital solution.'
  },
  {
    id: 'planning',
    icon: 'mdi:clipboard-text-outline',
    title: 'Create Plans',
    content: 'We develop detailed project plans, wireframes, and technical specifications. Our planning phase includes architecture design, technology stack selection, timeline creation, and resource allocation to ensure project success.'
  },
  {
    id: 'build',
    icon: 'mdi:code-braces',
    title: 'Build Project',
    content: 'Our skilled developers bring your vision to life using modern technologies and best practices. We focus on clean code, scalable architecture, and responsive design to create robust digital solutions.'
  },
  {
    id: 'testing',
    icon: 'mdi:bug-check',
    title: 'Testing',
    content: 'We conduct comprehensive testing including functionality, performance, security, and user experience testing. Our quality assurance process ensures your project meets the highest standards before launch.'
  },
  {
    id: 'deployment',
    icon: 'mdi:rocket-launch',
    title: 'Deployment',
    content: 'We handle the complete deployment process, including server setup, domain configuration, and go-live procedures. Our team ensures a smooth transition from development to production environment.'
  },
  {
    id: 'customers',
    icon: 'mdi:account-group',
    title: 'Support',
    content: 'Our success is measured by your satisfaction. We provide ongoing support, maintenance, and optimization to ensure your digital solution continues to deliver value and exceed expectations.'
  }
]

const Process: React.FC = () => {
  const [activeStep, setActiveStep] = useState<number>(0)
  const [slideHeight, setSlideHeight] = useState<number>(0)
  const stepperRef = useRef<HTMLDivElement>(null)
  const slidesRef = useRef<HTMLDivElement>(null)
  const slideRefs = useRef<(HTMLDivElement | null)[]>([])
  const scrollContainerRef = useRef<HTMLDivElement>(null)
  const [showLeftArrow, setShowLeftArrow] = useState<boolean>(false)
  const [showRightArrow, setShowRightArrow] = useState<boolean>(false)

  const getActiveStyling = (index: number): string => {
    const colorIndex = index % pastelColors.length
    switch (colorIndex) {
      case 0: return 'border-pink-600 bg-pink-100 text-pink-600'
      case 1: return 'border-blue-600 bg-blue-100 text-blue-600'
      case 2: return 'border-green-600 bg-green-100 text-green-600'
      case 3: return 'border-purple-600 bg-purple-100 text-purple-600'
      case 4: return 'border-orange-600 bg-orange-100 text-orange-600'
      case 5: return 'border-teal-600 bg-teal-100 text-teal-600'
      default: return 'border-indigo-600 bg-indigo-100 text-indigo-600'
    }
  }

  const getHoverStyling = (index: number): string => {
    const colorIndex = index % pastelColors.length
    switch (colorIndex) {
      case 0: return 'group-hover:border-pink-600 group-hover:bg-pink-100 group-hover:text-pink-600'
      case 1: return 'group-hover:border-blue-600 group-hover:bg-blue-100 group-hover:text-blue-600'
      case 2: return 'group-hover:border-green-600 group-hover:bg-green-100 group-hover:text-green-600'
      case 3: return 'group-hover:border-purple-600 group-hover:bg-purple-100 group-hover:text-purple-600'
      case 4: return 'group-hover:border-orange-600 group-hover:bg-orange-100 group-hover:text-orange-600'
      case 5: return 'group-hover:border-teal-600 group-hover:bg-teal-100 group-hover:text-teal-600'
      default: return 'group-hover:border-indigo-600 group-hover:bg-indigo-100 group-hover:text-indigo-600'
    }
  }

  const getGlowStyling = (index: number): string => {
    const colorIndex = index % pastelColors.length
    switch (colorIndex) {
      case 0: return 'bg-pink-200/50'
      case 1: return 'bg-blue-200/50'
      case 2: return 'bg-green-200/50'
      case 3: return 'bg-purple-200/50'
      case 4: return 'bg-orange-200/50'
      case 5: return 'bg-teal-200/50'
      default: return 'bg-indigo-200/50'
    }
  }

  useEffect(() => {
    if (slideRefs.current[activeStep]) {
      const height = slideRefs.current[activeStep]?.clientHeight || 0
      setSlideHeight(height)
    }
  }, [activeStep])

  useEffect(() => {
    const handleResize = (): void => {
      if (slideRefs.current[activeStep]) {
        const height = slideRefs.current[activeStep]?.clientHeight || 0
        setSlideHeight(height)
      }
    }

    window.addEventListener('resize', handleResize)
    return () => window.removeEventListener('resize', handleResize)
  }, [activeStep])

  useEffect(() => {
    checkScrollArrows()
    
    const handleScroll = () => {
      checkScrollArrows()
    }

    const handleResize = () => {
      checkScrollArrows()
    }

    const container = scrollContainerRef.current
    if (container) {
      container.addEventListener('scroll', handleScroll)
      window.addEventListener('resize', handleResize)
      
      return () => {
        container.removeEventListener('scroll', handleScroll)
        window.removeEventListener('resize', handleResize)
      }
    }
  }, [])

  const handleStepClick = (stepIndex: number): void => {
    setActiveStep(stepIndex)
  }

  const checkScrollArrows = (): void => {
    if (scrollContainerRef.current) {
      const { scrollLeft, scrollWidth, clientWidth } = scrollContainerRef.current
      setShowLeftArrow(scrollLeft > 0)
      setShowRightArrow(scrollLeft < scrollWidth - clientWidth)
    }
  }

  const scrollLeft = (): void => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: -100, behavior: 'smooth' })
    }
  }

  const scrollRight = (): void => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: 100, behavior: 'smooth' })
    }
  }

  return (
    <>
      <style jsx>{`
        .scroll-container::-webkit-scrollbar {
          display: none;
        }
      `}</style>
      <section className="py-20 sm:py-32 bg-transparent relative z-10">
        <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) px-4">
        <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-center mb-12 sm:mb-16 md:mb-20 text-dark dark:text-white px-4">
          Our Process
        </h1>
        
        <div className="max-w-4xl mx-auto">
          {/* Mobile: Horizontal Step Selector with Content Below */}
          <div className="lg:hidden">
            {/* Step Selector */}
            <div className="relative mb-8 pb-4 pt-4">
              {/* Progress Line - positioned to center with icons */}
              <div className="absolute top-16 left-6 right-6 h-0.5 bg-gray-200 dark:bg-gray-700"></div>
              <div 
                className="absolute top-16 left-6 h-0.5 bg-gradient-to-r from-pink-300 via-blue-300 via-green-300 via-purple-300 via-orange-300 via-teal-300 to-indigo-300 transition-all duration-500 ease-out"
                style={{
                  width: `calc(${((activeStep + 1) / timelineSteps.length) * 100}% - 3rem)`
                }}
              ></div>
              
              {/* Left Scroll Arrow */}
              {showLeftArrow && (
                <button
                  onClick={scrollLeft}
                  className="absolute left-0 top-16 -translate-y-1/2 z-10 text-2xl font-bold text-gray-600 dark:text-gray-300 hover:text-primary transition-colors"
                >
                  &lt;
                </button>
              )}
              
              {/* Right Scroll Arrow */}
              {showRightArrow && (
                <button
                  onClick={scrollRight}
                  className="absolute right-0 top-16 -translate-y-1/2 z-10 text-2xl font-bold text-gray-600 dark:text-gray-300 hover:text-primary transition-colors"
                >
                  &gt;
                </button>
              )}
              
              {/* Horizontal scroll container for step icons */}
              <div 
                ref={scrollContainerRef}
                className="flex overflow-x-auto pb-4 gap-2 px-2 pt-2 scroll-container"
                style={{ 
                  scrollbarWidth: 'none', 
                  msOverflowStyle: 'none',
                  WebkitOverflowScrolling: 'touch'
                }}
              >
                {timelineSteps.map((step, index) => {
                  const colorIndex = index % pastelColors.length;
                  const colorClass = pastelColors[colorIndex];
                  
                  return (
                    <div
                      key={step.id}
                      className="flex-shrink-0 cursor-pointer group transition-all duration-300"
                      onClick={() => handleStepClick(index)}
                    >
                      {/* Icon */}
                      <div className="relative w-16 h-16 mx-auto mb-2 mt-2">
                        <div className={`w-full h-full rounded-full border-2 flex items-center justify-center transition-all duration-300 ${
                          index === activeStep 
                            ? `${getActiveStyling(index)} shadow-lg scale-110` 
                            : `border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 ${getHoverStyling(index)} group-hover:scale-105`
                        }`}>
                          <Icon icon={step.icon} className="w-7 h-7" />
                        </div>
                        
                        {/* Glow effect */}
                        <div className={`absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-6 h-6 rounded-full transition-all duration-300 -z-10 ${
                          index === activeStep ? `${getGlowStyling(index)} scale-100` : 'scale-0'
                        }`}></div>
                      </div>
                      
                      {/* Title */}
                      <p className={`text-center text-xs font-medium transition-all duration-300 whitespace-nowrap ${
                        index === activeStep 
                          ? 'text-black dark:text-white font-semibold' 
                          : 'text-black/75 dark:text-gray-300'
                      }`}>
                        {step.title}
                      </p>
                    </div>
                  );
                })}
              </div>
            </div>
            
            {/* Mobile Content Card */}
            <div className="bg-white dark:bg-gray-800 rounded-3xl p-6 shadow-lg">
              <div className="text-center">
                <div className="mb-2">
                  <span className="inline-block px-3 py-1 bg-gray-100 dark:bg-gray-700 rounded-full text-xs font-medium text-gray-500 dark:text-gray-400">
                    Step {activeStep + 1} of {timelineSteps.length}
                  </span>
                </div>
                <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">
                  {timelineSteps[activeStep].title}
                </h3>
                <p className="text-gray-600 dark:text-gray-300 leading-relaxed">
                  {timelineSteps[activeStep].content}
                </p>
              </div>
            </div>
          </div>
          
          {/* Desktop: Horizontal Timeline */}
          <div className="hidden lg:block">
            {/* Timeline Stepper */}
            <div 
              ref={stepperRef}
              className="relative flex justify-between gap-0 mb-12"
            >
              {/* Progress Line */}
              <div className="absolute top-8 h-0.5 bg-gray-200 dark:bg-gray-700" style={{
                left: `calc(${100 / (timelineSteps.length * 2)}%)`,
                right: `calc(${100 / (timelineSteps.length * 2)}%)`
              }}></div>
              <div 
                className="absolute top-8 h-0.5 bg-gradient-to-r from-pink-300 via-blue-300 via-green-300 via-purple-300 via-orange-300 via-teal-300 to-indigo-300 transition-all duration-500 ease-out"
                style={{
                  left: `calc(${100 / (timelineSteps.length * 2)}%)`,
                  width: `calc(${((activeStep + 1) / timelineSteps.length) * 100}% - ${200 / timelineSteps.length}%)`
                }}
              ></div>
              
              {timelineSteps.map((step, index) => (
                <div
                  key={step.id}
                  className={`relative w-full cursor-pointer group transition-all duration-300 ${
                    index === activeStep ? 'is-active' : ''
                  }`}
                  onClick={() => handleStepClick(index)}
                >
                  {/* Icon */}
                  <div className="relative w-16 h-16 mx-auto mb-8">
                    <div className={`w-full h-full rounded-full border-2 flex items-center justify-center transition-all duration-300 ${
                      index === activeStep 
                        ? `${getActiveStyling(index)} shadow-lg scale-110` 
                        : `border-gray-300 dark:border-gray-600 bg-white dark:bg-dark-2 text-gray-500 dark:text-gray-400 ${getHoverStyling(index)} group-hover:scale-105`
                    }`}>
                      <Icon icon={step.icon} className="w-8 h-8" />
                    </div>
                    
                    {/* Glow effect */}
                    <div className={`absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-6 h-6 rounded-full transition-all duration-300 -z-10 ${
                      index === activeStep ? `${getGlowStyling(index)} scale-100` : 'scale-0'
                    }`}></div>
                  </div>
                  
                  {/* Title */}
                  <div>
                    <p className={`text-center text-lg font-medium leading-relaxed pt-8 transition-all duration-300 ${
                      index === activeStep 
                        ? 'text-black dark:text-white font-semibold' 
                        : 'text-black/75 dark:text-gray-300'
                    }`}>
                      {step.title.replace(' ', '\n')}
                    </p>
                  </div>
                </div>
              ))}
            </div>
            
            {/* Slides Container */}
            <div 
              ref={slidesRef}
              className="relative max-w-2xl mx-auto bg-white dark:bg-darkHeroBg m-3 py-8 my-10 text-center shadow-xl rounded-3xl transition-all duration-300 overflow-hidden"
              style={{ minHeight: slideHeight ? `${slideHeight}px` : '200px' }}
            >
              {timelineSteps.map((step, index) => (
                <div
                  key={step.id}
                  ref={(el) => { slideRefs.current[index] = el }}
                  className={`absolute top-0 left-0 w-full px-8 py-6 lg:px-12 lg:py-8 transition-all duration-500 ${
                    index === activeStep 
                      ? 'opacity-100 visible translate-x-0' 
                      : 'opacity-0 invisible translate-x-4'
                  }`}
                >
                  <h3 className="text-3xl text-black dark:text-white font-bold mb-6">
                    {step.title}
                  </h3>
                  <div className="text-lg font-normal text-black/75 dark:text-white leading-relaxed max-w-xl mx-auto">
                    <p>{step.content}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
    </>
  )
}

export default Process
</file>

<file path="src/components/Layout/Footer/index.tsx">
import Image from "next/image";
import Link from "next/link";
import { Icon } from "@iconify/react";
import { ProductType } from "@/app/api/data";

const footer = () => {
  return (
    <footer className="bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700" id="first-section">
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) px-4 py-8">
        {/* Mobile: Stack vertically, Desktop: Horizontal layout */}
        <div className="flex flex-col md:flex-row items-center justify-between gap-6 md:gap-4">
          {/* Logo Section */}
          <div className="flex items-center gap-2 text-xl md:text-2xl font-semibold text-black dark:text-white">
            <Image
              src="/images/logo/icon.png"
              alt="Haloweave Icon"
              width={32}
              height={32}
              className="w-6 h-6 md:w-8 md:h-8"
            />
            Haloweave
          </div>
          
          {/* Social Media Links */}
          <div className="flex items-center gap-4">
            <Link href="mailto:hello@haloweave.com" className="text-gray-400 hover:text-primary transition-colors">
              <Icon icon="mdi:email" className="w-5 h-5" />
            </Link>
            <Link href="https://www.linkedin.com/company/haloweave" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-primary transition-colors">
              <Icon icon="mdi:linkedin" className="w-5 h-5" />
            </Link>
            <Link href="https://www.instagram.com/haloweave" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-primary transition-colors">
              <Icon icon="mdi:instagram" className="w-5 h-5" />
            </Link>
          </div>
        </div>
        
        {/* Divider */}
        <div className="border-t border-gray-200 dark:border-gray-700 mt-6 pt-6">
          <div className="text-center text-sm text-gray-500 dark:text-gray-400">
            <p>© 2025 Haloweave. All rights reserved.</p>
          </div>
        </div>
      </div>
    </footer>
  )
}

export default footer;
</file>

<file path="src/components/Home/Hero/index.tsx">
"use client";
import Link from "next/link";
import { motion, AnimatePresence } from "framer-motion";
import { useState, useEffect } from "react";

const Hero = () => {
  const agencyTypes = [
    "DESIGN AGENCY",
    "SOFTWARE AGENCY", 
    "AI DEVELOPMENT",
    "MVP AGENCY",
    "SOFTWARE CONSULTANCY",
    "BRANDING",
    "UI DESIGN",
    "MOBILE APPS"
  ];
  
  const modernColors = [
    { bg: "bg-gradient-to-r from-pink-500/10 to-rose-500/10", text: "text-pink-600", border: "border-pink-200", glow: "shadow-pink-200/50" },
    { bg: "bg-gradient-to-r from-blue-500/10 to-cyan-500/10", text: "text-blue-600", border: "border-blue-200", glow: "shadow-blue-200/50" },
    { bg: "bg-gradient-to-r from-green-500/10 to-emerald-500/10", text: "text-green-600", border: "border-green-200", glow: "shadow-green-200/50" },
    { bg: "bg-gradient-to-r from-purple-500/10 to-violet-500/10", text: "text-purple-600", border: "border-purple-200", glow: "shadow-purple-200/50" },
    { bg: "bg-gradient-to-r from-orange-500/10 to-amber-500/10", text: "text-orange-600", border: "border-orange-200", glow: "shadow-orange-200/50" },
    { bg: "bg-gradient-to-r from-teal-500/10 to-cyan-500/10", text: "text-teal-600", border: "border-teal-200", glow: "shadow-teal-200/50" },
    { bg: "bg-gradient-to-r from-indigo-500/10 to-blue-500/10", text: "text-indigo-600", border: "border-indigo-200", glow: "shadow-indigo-200/50" },
    { bg: "bg-gradient-to-r from-rose-500/10 to-pink-500/10", text: "text-rose-600", border: "border-rose-200", glow: "shadow-rose-200/50" }
  ];
  
  const [currentTypeIndex, setCurrentTypeIndex] = useState(0);
  
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentTypeIndex((prevIndex) => 
        (prevIndex + 1) % agencyTypes.length
      );
    }, 2000);
    
    return () => clearInterval(interval);
  }, [agencyTypes.length]);

  return (
    <section
      className="relative pt-32 md:pt-40 pb-20 md:pb-32 overflow-hidden z-1"
      id="main-banner"
    >
      {/* Background Elements */}
      <div className="absolute inset-0 -z-10">
        <div className="absolute top-20 left-10 w-72 h-72 bg-blue-400/5 rounded-full blur-3xl"></div>
        <div className="absolute bottom-20 right-10 w-96 h-96 bg-purple-400/5 rounded-full blur-3xl"></div>
      </div>
      
      <div className="container mx-auto lg:max-w-(--breakpoint-xl) px-4">
        <div className="text-center">
          {/* Animated Badge */}
          <div className="mb-16">
            <AnimatePresence mode="wait">
              {/* @ts-ignore */}
              <motion.div 
                key={`bg-${currentTypeIndex}`}
                // @ts-ignore
                className={`inline-flex items-center gap-2 py-3 px-6 ${modernColors[currentTypeIndex].bg} ${modernColors[currentTypeIndex].border} border rounded-full w-fit mx-auto backdrop-blur-sm shadow-lg ${modernColors[currentTypeIndex].glow}`}
                initial={{ opacity: 0, scale: 0.8, rotateX: -90 }}
                animate={{ opacity: 1, scale: 1, rotateX: 0 }}
                exit={{ opacity: 0, scale: 0.8, rotateX: 90 }}
                transition={{ duration: 0.5, ease: "easeInOut" }}
                whileHover={{ scale: 1.05 }}
              >
                {/* @ts-ignore */}
                <motion.p 
                  key={currentTypeIndex}
                  // @ts-ignore
                  className={`${modernColors[currentTypeIndex].text} text-sm font-semibold tracking-wide`}
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -20 }}
                  transition={{ duration: 0.4, ease: "easeInOut" }}
                >
                  {agencyTypes[currentTypeIndex]}
                </motion.p>
              </motion.div>
            </AnimatePresence>
          </div>
          
          {/* Main Heading with Gradient */}
          {/* @ts-ignore */}
          <motion.h1 
            // @ts-ignore
            className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl xl:text-8xl font-bold leading-tight mb-6 bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-transparent dark:from-white dark:via-gray-100 dark:to-white px-4"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
          >
            We build software to{" "}
            <span className="bg-gradient-to-r from-primary to-blue-600 bg-clip-text text-transparent">
              grow your business
            </span>
          </motion.h1>
          
          {/* Subtitle */}
          {/* @ts-ignore */}
          <motion.p 
            // @ts-ignore
            className="text-lg sm:text-xl text-gray-600 dark:text-gray-300 mb-12 max-w-2xl mx-auto leading-relaxed px-4"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            From MVP to enterprise-scale applications.
          </motion.p>
          
          {/* CTA Buttons */}
          {/* @ts-ignore */}
          <motion.div 
            // @ts-ignore
            className="flex flex-col sm:flex-row gap-4 justify-center items-center px-4"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
          >
            <button 
              onClick={() => {
                console.log('Hero Contact Us button clicked');
                if (typeof window !== 'undefined' && (window as any).HelpKite) {
                  console.log('Toggling HelpKite chat...');
                  (window as any).HelpKite('toggle');
                } else {
                  console.log('HelpKite not available');
                }
              }}
              className="group bg-primary text-white text-base sm:text-lg font-semibold py-3 sm:py-4 px-6 sm:px-8 rounded-full hover:bg-blue-700 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/25 relative overflow-hidden w-full sm:w-auto text-center"
            >
              <span className="relative z-10">Contact Us</span>
              <div className="absolute inset-0 bg-gradient-to-r from-blue-600 to-blue-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </button>
          
          </motion.div>
        </div>
      </div>
    </section>
  );
};

export default Hero;
</file>

<file path="src/app/layout.tsx">
import { Poppins } from 'next/font/google'
import './globals.css'
import Header from '@/components/Layout/Header'
import Footer from '@/components/Layout/Footer'
// import { ThemeProvider } from 'next-themes'
import ScrollToTop from '@/components/ScrollToTop'
import Aoscompo from '@/utils/aos'
import Script from 'next/script'

const font = Poppins({ 
  subsets: ['latin'],
  weight: ['300', '400', '500', '600', '700', '800', '900']
})

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang='en' suppressHydrationWarning>
      <body className={`${font.className}`}>
          <Aoscompo>
            <Header />
            {children}
            
            <Footer />
          </Aoscompo>
        {/* <ScrollToTop /> */}
        <Script id="helpkite-settings" strategy="afterInteractive">
          {`
            window.helpkiteSettings = {
              organizationId: 'fy06VMYBQw3PW5BlVsQDaaMxwAJ2Yd86',
              agentId: 'xpwn3onpey8i37vulvw49fw7',
            };
          `}
        </Script>
        <Script
          src="http://localhost:3001/sdk"
          strategy="afterInteractive"
        />
      </body>
    </html>
  )
}
</file>

<file path="src/components/Layout/Header/index.tsx">
"use client";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { useEffect, useRef, useState } from "react";
import { headerData } from "../Header/Navigation/menuData";
import Logo from "./Logo";
import Image from "next/image";
import HeaderLink from "../Header/Navigation/HeaderLink";


const Header: React.FC = () => {
  const [sticky, setSticky] = useState(false);
  const [showContactButton, setShowContactButton] = useState(false);

  const handleScroll = () => {
    setSticky(window.scrollY >= 80);
    // Show contact button when hero CTA is scrolled away (approximately after hero section)
    setShowContactButton(window.scrollY >= 600);
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  return (
    <header
      className={`fixed top-0 z-40 w-full ${
        sticky ? "shadow-lg bg-white/80 backdrop-blur-md" : "shadow-none"
        }`}
    >
      <div className="lg:py-0 py-2">
        <div className="container mx-auto lg:max-w-(--breakpoint-xl) md:max-w-(--breakpoint-md) flex items-center justify-between px-4 overflow-hidden">
          <div
            className={`pr-4 lg:pr-16 duration-300 ${sticky ? "py-3" : "py-7"
              }`}
          >
            <Logo />
          </div>
          <nav className="hidden lg:flex grow items-center gap-8 justify-end">
            {headerData.map((item, index) => (
              <HeaderLink key={index} item={item} />
            ))}
            {showContactButton && (
              <button
                onClick={() => {
                  console.log('Header Contact Us button clicked');
                  if (typeof window !== 'undefined' && (window as any).HelpKite) {
                    console.log('Toggling HelpKite chat...');
                    (window as any).HelpKite('toggle');
                  } else {
                    console.log('HelpKite not available');
                  }
                }}
                className="bg-primary text-white px-6 py-3 rounded-full hover:bg-primary/90 transition-all duration-300 font-semibold"
              >
                Contact Us
              </button>
            )}
          </nav>
          
          {/* Mobile Contact Button */}
          <div className="lg:hidden flex-shrink-0">
            <button
              onClick={() => {
                console.log('Mobile Contact button clicked');
                if (typeof window !== 'undefined' && (window as any).HelpKite) {
                  console.log('Toggling HelpKite chat...');
                  (window as any).HelpKite('toggle');
                } else {
                  console.log('HelpKite not available');
                }
              }}
              className="bg-primary text-white px-3 py-2 rounded-full hover:bg-primary/90 transition-all duration-300 font-semibold text-xs sm:text-sm sm:px-4 whitespace-nowrap"
            >
              Contact
            </button>
          </div>
        </div>
      </div>
    </header>
  );
};

export default Header;
</file>

</files>
